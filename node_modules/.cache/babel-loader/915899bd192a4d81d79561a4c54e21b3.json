{"ast":null,"code":"var _jsxFileName = \"D:\\\\1Learn\\\\todo-app\\\\src\\\\components\\\\TodoApp.js\";\nimport React from \"react\";\nimport Header from \"../components/layout/Header\";\nimport Todos from \"./Todos\";\nimport AddTodo from \"./AddTodo\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass TodoApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.handleCheckboxChange = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.deleteTodo = id => {\n      this.setState({\n        todos: [...this.state.todos.filter(todo => {\n          return todo.id !== id;\n        })]\n      });\n    };\n\n    this.addTodo = title => {\n      const newTodo = {\n        id: uuid.v4(),\n        title: title,\n        completed: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddTodo, {\n      addTodo: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Todos, {\n      todos: this.state.todos,\n      handleChange: this.handleCheckboxChange,\n      deleteTodo: this.deleteTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  componentDidMount() {\n    //giới hạn số lượng trả về\n    const config = {\n      params: {\n        _limit: 5\n      }\n    }; //tạo GET request để lấy danh sách todos\n\n    axios.get(\"https://jsonplaceholder.typicode.com/todos\").then(response => this.setState({\n      todos: response.data\n    })); // gắn giá trị vào state\n  }\n\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["D:/1Learn/todo-app/src/components/TodoApp.js"],"names":["React","Header","Todos","AddTodo","uuid","axios","TodoApp","Component","state","todos","handleCheckboxChange","id","setState","map","todo","completed","deleteTodo","filter","addTodo","title","newTodo","v4","render","componentDidMount","config","params","_limit","get","then","response","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,KAAK,EAAE;AADD,KAD4B;;AAAA,SAKpCC,oBALoC,GAKZC,EAAD,IAAQ;AAC7B,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBI,GAAjB,CAAsBC,IAAD,IAAU;AACpC,cAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;AAClBG,YAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACD;;AACD,iBAAOD,IAAP;AACD,SALM;AADK,OAAd;AAQD,KAdmC;;AAAA,SAgBpCE,UAhBoC,GAgBtBL,EAAD,IAAQ;AACnB,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,CACL,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBQ,MAAjB,CAAyBH,IAAD,IAAU;AACnC,iBAAOA,IAAI,CAACH,EAAL,KAAYA,EAAnB;AACD,SAFE,CADE;AADK,OAAd;AAOD,KAxBmC;;AAAA,SA0BpCO,OA1BoC,GA0BzBC,KAAD,IAAW;AACnB,YAAMC,OAAO,GAAG;AACdT,QAAAA,EAAE,EAAEP,IAAI,CAACiB,EAAL,EADU;AAEdF,QAAAA,KAAK,EAAEA,KAFO;AAGdJ,QAAAA,SAAS,EAAE;AAHG,OAAhB;AAKA,WAAKH,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBW,OAAtB;AADK,OAAd;AAGD,KAnCmC;AAAA;;AAqCpCE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKJ,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KADpB;AAEE,MAAA,YAAY,EAAE,KAAKC,oBAFrB;AAGE,MAAA,UAAU,EAAE,KAAKM,UAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAWD;;AACDO,EAAAA,iBAAiB,GAAG;AAChB;AACF,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE;AADF;AADK,KAAf,CAFkB,CAOlB;;AACArB,IAAAA,KAAK,CACFsB,GADH,CACO,4CADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI,KAAKjB,QAAL,CAAc;AAAEH,MAAAA,KAAK,EAAEoB,QAAQ,CAACC;AAAlB,KAAd,CAFpB,EARkB,CAU4C;AAC/D;;AA7DmC;;AA+DtC,eAAexB,OAAf","sourcesContent":["import React from \"react\";\nimport Header from \"../components/layout/Header\";\nimport Todos from \"./Todos\";\nimport AddTodo from \"./AddTodo\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass TodoApp extends React.Component {\n  state = {\n    todos: []\n  };\n\n  handleCheckboxChange = (id) => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  deleteTodo = (id) => {\n    this.setState({\n      todos: [\n        ...this.state.todos.filter((todo) => {\n          return todo.id !== id;\n        }),\n      ],\n    });\n  };\n\n  addTodo = (title) => {\n    const newTodo = {\n      id: uuid.v4(),\n      title: title,\n      completed: false,\n    };\n    this.setState({\n      todos: [...this.state.todos, newTodo],\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <AddTodo addTodo={this.addTodo} />\n        <Todos\n          todos={this.state.todos}\n          handleChange={this.handleCheckboxChange}\n          deleteTodo={this.deleteTodo}\n        />\n      </div>\n    );\n  }\n  componentDidMount() {\n      //giới hạn số lượng trả về\n    const config = {\n      params: {\n        _limit: 5\n      }\n    };\n    //tạo GET request để lấy danh sách todos\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos\")\n      .then(response => this.setState({ todos: response.data })); // gắn giá trị vào state\n  }\n}\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}