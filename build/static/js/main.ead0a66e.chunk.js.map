{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/layout/Footer.js","store/containers/Footer.js","store/actions/changeThemeAction.js","components/TodoApp.js","store/reducers/themeReducer.js","store/reducers/index.js","index.js"],"names":["Header","className","React","Component","TodoItem","this","props","todo","completed","id","title","type","checked","onChange","handleChange","onClick","deleteTodo","Todos","todos","map","key","AddTodo","useState","setTitle","onSubmit","e","preventDefault","addTodo","placeholder","value","target","Footer","submitThemeColor","bind","color","console","log","saveColorTheme","nextprops","JSON","stringify","document","documentElement","style","setProperty","themeColor","connect","state","dispatch","payload","saveTheme","TodoApp","setState","useEffect","axios","get","params","_limit","then","response","data","todoData","post","delete","reponse","filter","initState","combineReducers","action","Object","assign","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ead0a66e.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <header className=\"header-container\">\n                <h1 className=\"header-title\">Simple Todo App</h1>\n            </header>\n\n        );\n    }\n};\nexport default Header;\n","import React from \"react\";\n\nclass TodoItem extends React.Component {\n    render() {\n        const { completed, id, title } = this.props.todo\n        return (\n            <li className=\"todo-item\">\n                <input\n                    type=\"checkbox\"\n                    checked={completed}\n                    onChange={() => this.props.handleChange(id)}\n                />\n                <span className={completed ? \"completed\" : null}>\n                    {title}\n                </span>\n                <button className=\"btn-style\" onClick={() => this.props.deleteTodo(id)}> X </button>\n            </li>\n        );\n\n    }\n}\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nclass Todos extends React.Component {\n    render() {\n        return (\n            <div>\n                <ul>\n                    {this.props.todos.map(todo => (\n                        <TodoItem\n                            key={todo.id}\n                            todo={todo}\n                            handleChange={this.props.handleChange}\n                            deleteTodo={this.props.deleteTodo}\n                        />\n\n\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\nexport default Todos;\n\n","import React, { useState } from \"react\";\r\n//class AddTodo extends React.Component {\r\nfunction AddTodo(props) {\r\n  /*state = {\r\n    title: \"\",\r\n  };\r\n  onInputChange = (e) => {\r\n    this.setState({\r\n      title: e.target.value,\r\n    });\r\n  };*/\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const onInputChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  /*addTodo = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({\r\n      title: \"\",\r\n    });\r\n  };*/\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n    props.addTodo(title);\r\n    setTitle(\"\");\r\n  };\r\n  return (\r\n    <form className=\"form-container\" onSubmit={addTodo}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add Todo...\"\r\n        className=\"input-text\"\r\n        //value={this.state.title}\r\n        // onChange={this.onInputChange}\r\n        value={title}\r\n        onChange={onInputChange}\r\n      />\r\n      <input type=\"submit\" value=\"Submit\" className=\"input-submit\" />\r\n    </form>\r\n  );\r\n}\r\nexport default AddTodo;\r\n","import React from \"react\";\r\n\r\nconst RED = \"#ff0000\";\r\nconst BLUE = \"#0000ff\";\r\nconst GRAY = \"#678c89\";\r\n\r\nclass Footer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.submitThemeColor = this.submitThemeColor.bind(this);\r\n  }\r\n\r\n  submitThemeColor(color) {\r\n    if (color) {\r\n      console.log(\"handleChangeTheme\");\r\n      this.props.saveColorTheme(color);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextprops) {\r\n    console.log(\r\n      \"UNSAFE_componentWillReceiveProps: \" + JSON.stringify(nextprops)\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      \"--main-color\",\r\n      nextprops.themeColor.color\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <div className=\"vertical-center\">\r\n          <span>Choose Theme </span>\r\n          <button\r\n            onClick={() => this.submitThemeColor(RED)}\r\n            className=\"dot red\"\r\n          />\r\n          <button\r\n            onClick={() => this.submitThemeColor(BLUE)}\r\n            className=\"dot blue\"\r\n          />\r\n          <button\r\n            onClick={() => this.submitThemeColor(GRAY)}\r\n            className=\"dot gray\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","import { connect } from \"react-redux\";\r\nimport { saveTheme } from \"../actions/changeThemeAction\";\r\nimport Footer from \"../../components/layout/Footer\";\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatch,\r\n  saveColorTheme: color => dispatch(saveTheme(color))\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    themeColor: state.color\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Footer);\r\n","export const saveTheme = (color) => ({\r\n  type: \"CHANGE_THEME\",\r\n  payload: {\r\n    color,\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../components/layout/Header\";\nimport Todos from \"./Todos\";\nimport AddTodo from \"./AddTodo\";\n//import Footer from \"./layout/Footer\";\nimport Footer from \"../store/containers/Footer\";\n//import uuid from \"uuid\";\nimport axios from \"axios\";\n\n//class TodoApp extends React.Component {\nfunction TodoApp() {\n  /*state = {\n    todos: [],\n  };*/\n  const [state, setState] = useState({\n    todos: [],\n  });\n\n  /*handleCheckboxChange = (id) => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n  };\n*/\n  const handleCheckboxChange = (id) => {\n    setState({\n      todos: state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  const deleteTodo = (id) => {\n    /*this.setState({\n      todos: [\n        ...this.state.todos.filter((todo) => {\n          return todo.id !== id;\n        }),\n      ],\n    });*/\n    axios\n      .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then((reponse) =>\n        setState({\n          todos: [\n            ...state.todos.filter((todo) => {\n              return todo.id !== id;\n            }),\n          ],\n        })\n      );\n  };\n\n  const addTodo = (title) => {\n    /* const newTodo = {\n      id: uuid.v4(),\n      title: title,\n      completed: false,\n    };\n    this.setState({\n      todos: [...this.state.todos, newTodo],\n    });*/\n    const todoData = {\n      title: title,\n      completed: false,\n    };\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/todos\", todoData)\n      .then((response) => {\n        console.log(response.data);\n        setState({\n          todos: [...state.todos, response.data],\n        });\n      });\n  };\n /*componentDidMount() {\n    //giới hạn số lượng\n    const config = {\n      params: {\n        _limit: 5,\n      },\n    };\n    //tạo GET request để lấy danh sách todos\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos\", config)\n      .then((response) => this.setState({ todos: response.data })); // gắn giá trị vào state\n  }*/\n  useEffect(() => {\n    const config = {\n      params: {\n        _limit: 5,\n      },\n    };\n    //tạo GET request để lấy danh sách todos\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos\", config)\n      .then((response) => setState({ todos: response.data }));\n  }, []);\n  //render() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <AddTodo addTodo={addTodo} />\n      <Todos\n        todos={state.todos}\n        handleChange={handleCheckboxChange}\n        deleteTodo={deleteTodo}\n      />\n      <Footer/>\n    </div>\n  );\n  // }\n \n}\nexport default TodoApp;\n","let initState = {\r\n  color: \"#FFFFFF\",\r\n};\r\nexport default function themeReducer(state = initState, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE_THEME\":\r\n      console.log(\"themeReducer: \" + JSON.stringify(state));\r\n      return Object.assign({}, state, {\r\n        color: action.payload.color,\r\n      });\r\n    default:\r\n      return initState;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\nimport color from \"./themeReducer\";\nexport default combineReducers({\n  color,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport TodoApp from \"./components/TodoApp\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <TodoApp />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}